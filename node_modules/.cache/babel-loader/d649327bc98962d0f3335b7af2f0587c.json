{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Computer\\\\Desktop\\\\StapleLogic\\\\react-pdf-tables\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Computer\\\\Desktop\\\\StapleLogic\\\\react-pdf-tables\\\\src\\\\App.js\";\nimport React, { Fragment } from 'react';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport Invoice from './components/reports/Invoice';\nimport invoice from './data/invoice'; // import logo from './logo.svg';\n\nimport './App.css';\n\nconst App = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        Json = _useState2[0],\n        setJson = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        json4Table = _useState4[0],\n        setJson4Table = _useState4[1];\n\n  console.log(json4Table);\n\n  const readUploadFile = e => {\n    console.log(e.target.files);\n    e.preventDefault();\n\n    if (e.target.files) {\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        const data = e.target.result;\n        const workbook = xlsx.read(data, {\n          type: \"array\"\n        });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        const json = xlsx.utils.sheet_to_json(worksheet);\n        setJson(json);\n      };\n\n      reader.readAsArrayBuffer(e.target.files[0]);\n    }\n  };\n\n  function Id_Greater_Then10() {\n    const result = Json.filter(idLessThen10);\n\n    function idLessThen10(Json) {\n      // console.log(Json.__EMPTY)\n      return Json.__EMPTY > 10;\n    }\n\n    setJson4Table(result);\n  }\n\n  function Nationality_Dom() {\n    const result = Json.filter(nationality_equal_dom);\n\n    function nationality_equal_dom(Json) {\n      // console.log(Json.__EMPTY)\n      return Json.__EMPTY_3 === 'DOM';\n    }\n\n    setJson4Table(result);\n  }\n\n  function fillter_By_Location() {\n    const result = Json.filter(Json => {\n      var _Json$__EMPTY_;\n\n      // console.log(Json.__EMPTY)\n      return ((_Json$__EMPTY_ = Json.__EMPTY_4) === null || _Json$__EMPTY_ === void 0 ? void 0 : _Json$__EMPTY_.trim()) === 'Dohren' || Json.__EMPTY_4 === 'Ansbach';\n    });\n    setJson4Table(result);\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(PDFViewer, {\n      width: \"1000\",\n      height: \"600\",\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Invoice, {\n      invoice: invoice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Computer/Desktop/StapleLogic/react-pdf-tables/src/App.js"],"names":["React","Fragment","PDFViewer","Invoice","invoice","App","useState","Json","setJson","json4Table","setJson4Table","console","log","readUploadFile","e","target","files","preventDefault","reader","FileReader","onload","data","result","workbook","xlsx","read","type","sheetName","SheetNames","worksheet","Sheets","json","utils","sheet_to_json","readAsArrayBuffer","Id_Greater_Then10","filter","idLessThen10","__EMPTY","Nationality_Dom","nationality_equal_dom","__EMPTY_3","fillter_By_Location","__EMPTY_4","trim"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport {PDFViewer} from '@react-pdf/renderer'\r\nimport Invoice from './components/reports/Invoice'\r\nimport invoice from './data/invoice'\r\n\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\n\r\nconst App = ( ) => {\r\n  const [Json, setJson] = useState();\r\n\r\n  const [json4Table , setJson4Table] = useState();\r\n\r\n  console.log(json4Table)\r\n\r\n  const readUploadFile = (e) => {\r\n    console.log(e.target.files)\r\n    e.preventDefault();\r\n    if (e.target.files) {\r\n      \r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n            const data = e.target.result;\r\n            const workbook = xlsx.read(data, { type: \"array\" });\r\n            const sheetName = workbook.SheetNames[0];\r\n            const worksheet = workbook.Sheets[sheetName];\r\n            const json = xlsx.utils.sheet_to_json(worksheet);\r\n            setJson(json);\r\n\r\n\r\n        };\r\n        reader.readAsArrayBuffer(e.target.files[0]);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction Id_Greater_Then10() {\r\n\r\n  \r\nconst result = Json.filter(idLessThen10);\r\n\r\nfunction idLessThen10(Json) {\r\n  // console.log(Json.__EMPTY)\r\n  return Json.__EMPTY > 10;\r\n}\r\n\r\nsetJson4Table(result)\r\n\r\n}\r\n\r\nfunction Nationality_Dom() {\r\n\r\n  \r\n  const result = Json.filter(nationality_equal_dom);\r\n  \r\n  function nationality_equal_dom(Json) {\r\n    // console.log(Json.__EMPTY)\r\n    return Json.__EMPTY_3 === 'DOM';\r\n  }\r\n  \r\n  setJson4Table(result)\r\n  \r\n  }\r\n\r\n\r\n  function fillter_By_Location() {\r\n\r\n  \r\n    const result = Json.filter((Json) =>  {\r\n      // console.log(Json.__EMPTY)\r\n      return ( Json.__EMPTY_4?.trim()=== 'Dohren' || Json.__EMPTY_4 === 'Ansbach' ) ;\r\n    } );\r\n    \r\n  \r\n    \r\n    setJson4Table(result)\r\n    \r\n    \r\n  return (\r\n            <Fragment>\r\n                <PDFViewer width=\"1000\" height=\"600\" className=\"app\" >\r\n                    <Invoice invoice={invoice}/>\r\n                </PDFViewer>\r\n            </Fragment>\r\n        );\r\n\r\n  }}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}